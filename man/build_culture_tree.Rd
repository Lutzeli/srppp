% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/srppp-xml-culture-tree.R
\name{build_culture_tree}
\alias{build_culture_tree}
\title{Build a Hierarchical Culture Tree}
\usage{
build_culture_tree(df)
}
\arguments{
\item{df}{A tibble with the following columns:
\itemize{
\item \code{desc_pk}: Unique identifier for each culture node.
\item \code{de}: Culture name in German.
\item \code{fr}: Culture name in French.
\item \code{it}: Culture name in Italian.
\item \code{en}: Culture name in English.
\item \code{prt_1_pk}: Identifier of the first parent node (can be NA if no parent).
\item \code{prt_2_pk}: Identifier of the second parent node (can be NA if no second parent).
}}
}
\value{
A \code{Node} object (from the \code{data.tree} package) representing the root of the
culture hierarchy. Each node in the tree has the following attributes:
\itemize{
\item \code{name}: The German name of the culture (from the \code{de} column).
\item \code{desc_pk}: The unique identifier of the culture as an attribute.
\item \code{parents}: A list of parent nodes (can be empty, contain one, or two parents).
}
}
\description{
Constructs a hierarchical tree structure from a tibble, with each node representing
a unique culture. Each node can have multiple parent nodes, allowing for complex
cultural hierarchies and relationships.
}
\details{
The function builds the culture tree in two main steps:
\enumerate{
\item Node Creation: It first creates all unique culture nodes and adds them to a lookup table.
Each node is initialized with its German name and unique identifier.
\item Relationship Establishment: It then establishes parent-child relationships between nodes.
If a node has multiple parents, all are linked, allowing for complex hierarchies.
}

The function handles cases where:
\itemize{
\item A culture has no parents (it becomes a direct child of the root "Cultures" node)
\item A culture has one parent
\item A culture has two parents
}

It prevents circular references and ensures each parent-child relationship is unique.
}
\note{
\itemize{
\item The tree structure allows for multiple parents per node, which is not standard
in typical tree implementations. This enables representation of complex culture
relationships where a culture might belong to multiple categories.
\item While all language versions (de, fr, it, en) are present in the input data,
the tree nodes are labeled with the German version by default.
}
}
\keyword{internal}
